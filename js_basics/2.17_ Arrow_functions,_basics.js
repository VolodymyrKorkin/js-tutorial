// 1. Функции-стрелки, основы
// let func = (arg1, arg2, ...argN) => expression

// это более короткий вариант такой записи:
// let func = function(arg1, arg2, ...argN) {
//     return expression;
//   };

// Пример:
// let sum = (a, b) => a + b; // Более короткая форма
// 
// let sum = function(a, b) { // более длинная форма
//   return a + b;
// };
// 
// alert( sum(1, 2) ); // 3

// (a, b) => a + b  задаёт функцию с двумя аргументами a и b, которая при запуске 
// вычисляет выражение справа a + b и возвращает его результат.

// Если у нас только один аргумент, то круглые скобки вокруг параметров можно опустить, 
// сделав запись ещё короче:
// let double = n => n * 2; 
// то же что и:
// let double = function(n) { return n * 2 }

// Если нет аргументов, указываются пустые круглые скобки:
// let sayHi = () => alert("Hello!");
// sayHi();

// Функции-стрелки могут быть использованы так же, как и Function Expression.
// let age = prompt("Сколько Вам лет?", 18);
// 
// let welcome = (age < 18) ?
//   () => alert('Привет') :
//   () => alert("Здравствуйте!"); 
// welcome(); // теперь всё в порядке

// 2. Многострочные стрелочные функции
// нужно заключить инструкции в фигурные скобки. 
// И использовать return внутри них, как в обычной функции.

// let sum = (a, b) => {  // фигурная скобка, открывающая тело многострочной функции
//     let result = a + b;
//     return result; // при фигурных скобках для возврата значения нужно явно вызвать return
//   };  
//   alert( sum(1, 2) ); // 3

/* Задание 2.17.1. Перепишите с использованием функции-стрелки
Замените код Function Expression стрелочной функцией: */
// function ask(question, yes, no) {
//     if (confirm(question)) yes()
//     else no();
//   }  
//   ask(
//     "Вы согласны?",
//     function() { alert("Вы согласились."); },
//     function() { alert("Вы отменили выполнение."); }
//   );

// function ask(question, yes, no) {
// if (confirm(question)) yes()
// else no();
// }  
// ask(
//   "Вы согласны?",
//   () => { alert("Вы согласились."); },
//   () => { alert("Вы отменили выполнение."); }
// );

