// function showMessage() {
//     alert( 'Всем привет!' );
//   }
//   
//   showMessage();
//   showMessage();

// Вначале идёт ключевое слово function, после него имя функции, 
// затем список параметров в круглых скобках через запятую (в вышеприведённом примере он пустой) 
// и, наконец, код функции, также называемый «телом функции», внутри фигурных скобок.

// 2. Локальные переменные

// Переменные, объявленные внутри функции, видны только внутри этой функции.
// function showMessage() {
//     let message = "Привет, я JavaScript!"; // локальная переменная
//     alert( message );
//   }
//   showMessage(); // Привет, я JavaScript!
//   alert( message ); // <-- будет ошибка, т.к. переменная видна только внутри функции

// 3. Внешние переменные

// У функции есть доступ к внешним переменным, например:
// let userName = 'Вася';
// 
// function showMessage() {
//   let message = 'Привет, ' + userName;
//   alert(message);
// }
// showMessage(); // Привет, Вася

// Функция обладает полным доступом к внешним переменным и может изменять их значение.
// let userName = 'Вася';
// 
// function showMessage() {
//   userName = "Петя"; // (1) изменяем значение внешней переменной
// 
//   let message = 'Привет, ' + userName;
//   alert(message);
// }
// 
// alert( userName ); // Вася перед вызовом функции
// 
// showMessage();
// 
// alert( userName ); // Петя, значение внешней переменной было изменено функцией

// Внешняя переменная используется, только если внутри функции нет такой локальной.
// Если одноимённая переменная объявляется внутри функции, тогда она перекрывает внешнюю. 
// Например, в коде ниже функция использует локальную переменную userName. Внешняя будет проигнорирована:
// let userName = 'Вася';
// 
// function showMessage() {
//   let userName = "Петя"; // объявляем локальную переменную
// 
//   let message = 'Привет, ' + userName; // Петя
//   alert(message);
// }
// 
// // функция создаст и будет использовать свою собственную локальную переменную userName
// showMessage();
// 
// alert( userName ); // Вася, не изменилась, функция не трогала внешнюю переменную

// 4/ Глобальные переменные
// Переменные, объявленные снаружи всех функций, такие как внешняя переменная userName 
// в вышеприведённом коде – называются глобальными.

// Глобальные переменные видимы для любой функции 
// (если только их не перекрывают одноимённые локальные переменные).

// Желательно сводить использование глобальных переменных к минимуму. 
// В современном коде обычно мало или совсем нет глобальных переменных. 
// Хотя они иногда полезны для хранения важнейших «общепроектовых» данных.